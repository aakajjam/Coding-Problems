// When typing on the java-excersises website code editor, change class name to Main

/*
public class Java_Fundamentals {
    public static void main(String[] args) {
        System.out.println("Hello World"); // Printing out Hello World on first line
        System.out.print("Alexandra Abramov"); // Printing out Alexandra Abramov on the second line
    }
}
*/

/*
// Mad Libs
import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String[] args) {

        // import scanner to ask for input
        Scanner input = new Scanner(System.in); // Created a Scanner Object

        // Ask for season of the year
        System.out.print("Enter a season of the year: ");
        String season = input.nextLine();

        // Ask for a whole number
        System.out.print("Enter a whole number: ");
        int number = input.nextInt();
        input.nextLine(); // Consume the newline character

        // Ask for an adjective
        System.out.print("Enter an adjective: ");
        String adjective = input.nextLine();

        // Print out the statement
        System.out.print("On a " + adjective + season + " day, I drank a minimum of " +
                number + " cups of coffee");
    }
}
*/

/*
// Write a Java program to print the sum of two numbers.
public class Java_Fundamentals {
    public static void main(String[] args){
        // Define a two integer variables
        int a = 74;
        int b = 36;

        // Print the result by adding the sum
        System.out.print(a+b);
    }
}
*/


/*
// Write a Java program to divide two numbers and print them on the screen.
public class Java_Fundamentals {
    public static void main(String[] args) {
        // Define a two integer variables
        int a = 50;
        int b = 3;

        // Print the result by dividing the sum
        System.out.print(a/b); // This will give us a whole number since its integer division
    }
}
 */

/*
// Write a Java program to print the results of the following operations.
public class Java_Fundamentals {
    public static void main(String[] args) {
        // Display the result by using the print statement, no need to declare variables
        System.out.println(-5 + 8 * 6);
        System.out.println((55+9) % 9);
        System.out.println(20 + -3*5 / 8);
        System.out.println(5 + 15 / 3 * 2 - 8 % 3);

    }
}
*/


/*
// Write a Java program that takes two numbers as input and displays the product of two numbers.

import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String[] args) {
        // Import scanner

        // Create a scanner object
        Scanner input = new Scanner(System.in);

        // Create a variable to take input of first number
        System.out.print("Enter the first number: ");
        int first = input.nextInt();

        // Consume the newline character
        input.nextLine();

        // Create a variable to take the input of the second number
        System.out.print("Enter the second number: ");
        int second = input.nextInt();

        // Again consume the newline character
        input.nextLine();

        // Multiply the two numbers saved to the variables
        System.out.print("The product is: " + first * second);
    }
}
*/

/*
// Write a Java program that takes a number as input and prints its multiplication table up to 10.

import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String[]args) {
        // Import scanner class

        // Create a scanner class
        Scanner input = new Scanner(System.in);

        // Create a variable to take input
        System.out.print("Enter a number: ");
        int number = input.nextInt();

        // Consume the newline character
        input.nextLine();

        // Create a for loop up to 10
        for (int i = 0; i < 11; i++){
            System.out.println("8 * " + i + " = " + i * number);
        }
    }
}
*/

/*
// Write a Java program to print the sum (addition), multiply, subtract, divide and remainder of two numbers.
import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String[]args){
        // Import scanner class

        // Create a scanner instance to take input
        Scanner input = new Scanner(System.in);

        // Create a variable to take input
        System.out.print("Enter the first number: ");
        int first = input.nextInt();

        // Consume the newline character
        input.nextLine();

        // Create another variable to take input
        System.out.print("Enter the second number: ");
        int second = input.nextInt();

        // Again consume the newline character
        input.nextLine();

        // Print out the arithmatic operations
        System.out.println("Sum: " + (first + second));
        System.out.println("Difference: " + (first - second));
        System.out.println("Product: " + (first * second));
        System.out.println("Quotient: " + (first / second));
        System.out.println("Mod: " + (first % second));

    }
}
 */

/*
// Write a Java program to compute the specified expressions and print the output.
public class Java_Fundamentals {
    public static void main(String[]args){
        // Display the result
        System.out.print(((25.5 * 3.5 - 3.5 * 3.5) / (40.5 - 4.5)));

    }
}
*/


/*
// Change for a Dollar Game - TAU
import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String[] args) {
        // Import scanner class

        // Create a scanner instance to take input
        Scanner input = new Scanner(System.in);

        // Ask how many pennies would you like - Take input as well
        System.out.print("How many pennies would you like: ");
        int pennies = input.nextInt();
        input.nextLine(); // Consume the newline character
        // Get the total of pennies
        double pen_total = pennies * 0.01;

        // How many nickels would you like - Take input as well
        System.out.print("How many nickels would you like: ");
        int nickels = input.nextInt();
        input.nextLine(); // Consume the newline character
        // Get the total of nickels
        double nic_total = nickels * 0.05;

        // How many dimes would you like - Take input as well
        System.out.print("How many dimes would you like: ");
        int dimes = input.nextInt();
        input.nextLine(); // Consume the newline character
        // Get the total of dimes
        double dime_total = dimes * 0.10;

        // How many quarters would you like - Take input as well
        System.out.print("How many quarters would you like: ");
        int quarters = input.nextInt();
        input.nextLine(); // Consume the newline character
        // Get the total of quarters
        double quart_total = quarters * 0.25;

        input.close(); // Close the scanner

        // Add up all the quantities of coins
        double cumulative_total = pen_total + nic_total + dime_total + quart_total;

        if (cumulative_total == 1) {
            System.out.print("You win");
        }

        else if (cumulative_total < 1) {
            System.out.print("You fell short by: " + (1-cumulative_total));
            }

        else{
            System.out.print("You went over by:" + (cumulative_total - 1));
        }

        }

    }
*/


/*
// Chapter 4a: While Loop Problem
import java.util.Scanner;


 // WHILE LOOP:
 //Each store employee makes $15 an hour. Write a program that allows the employee
 //to enter the number of hours worked for the week. Do not allow overtime.

public class Java_Fundamentals {

    public static void main(String args[]){

        //Initialize known variables
        int rate = 15;
        int maxHours = 40;


        //Get input for unknown variables
        System.out.println("How many hours did you work this week?");
        Scanner scanner = new Scanner(System.in);
        double hoursWorked = scanner.nextDouble();

        //Validate input
        while(hoursWorked > maxHours || hoursWorked < 1){
            System.out.println("Invalid entry. Your hours must be between 1 and 40. Try again.");
            hoursWorked = scanner.nextDouble(); // Once this is met, we break out of our loop - This is the sentinnal
        }

        scanner.close();

        //Calculate gross
        double gross = rate * hoursWorked;
        System.out.println("Gross pay: $" + gross);

    }
}
*/

/*
// Chapter 4b: Do While Loop - TAU
import java.util.Scanner;

 // DO WHILE LOOP:
 // Write a program that allows a user to enter two numbers,
 // and then sums up the two numbers. The user should be able to
 // repeat this action until they indicate they are done.

public class Java_Fundamentals {

    public static void main(String args[]){

        Scanner scanner = new Scanner(System.in);

        boolean again;

        do{
            System.out.println("Enter the first number");
            double num1 = scanner.nextDouble();

            System.out.println("Enter the second number");
            double num2 = scanner.nextDouble();

            double sum = num1 + num2;

            System.out.println("The sum is " + sum);

            System.out.println("Would you like to start over? True or False");
            again = scanner.nextBoolean(); // Asking the user to input true or false

        } while(again);

        scanner.close();

        // The do statement will run once first
        // Then the while will allow us to run the code in the do condition if we say true
        // If we say false, we are breaking out of the loop
    }
}
*/

// Chapter 4c- For Loop TAU

/*
// Chapter 4c - For Loops TAU
// LOOP BREAK
// Search a String to determine if it contains the letter ‘A’.

import java.util.Scanner;

public class Java_Fundamentals {

    public static void main(String args[]){

        //Get text
        System.out.println("Enter some text:");
        Scanner scanner = new Scanner(System.in);
        String text = scanner.next();
        scanner.close();

        boolean letterFound = false;

        //Search text for letter A
        for(int i=0; i<text.length(); i++){ // We say text length because 0 can iterate over a lenght of numbers not a string
            char currentLetter = text.charAt(i); // At each index i is being matched with a letter so at index 0, i would be the first letter of the work
            if(currentLetter == 'A' || currentLetter == 'a'){
                letterFound = true;
                break;
            }
        }

        if(letterFound){
            System.out.println("This text contains the letter 'A'");
        }
        else{
            System.out.println("This text does not contain the letter 'A'");
        }
    }
}
*/


/*
// Chapter 4ad - Nester Loops
// NESTED LOOPS:
// Find the average of each student's test scores

import java.util.Scanner;

public class Java_Fundamentals {

    public static void main(String args[]){

        //Initialize what we know
        int numberOfStudents = 24;
        int numberOfTests = 4;

        Scanner scanner = new Scanner(System.in);

        //Process all students
        for(int i=0; i< numberOfStudents; i++){

            double total = 0;
            for(int j=0; j<numberOfTests; j++){
                System.out.println("Enter the score for Test #" + (j+1));
                double score = scanner.nextDouble();
                total = total + score;
            }

            double average = total/numberOfTests;
            System.out.println("The test average for student #" + (i+1) + " is " + average);
        }

        scanner.close();
    }
}
*/

/*
// Roll the Dice Game - Mad Libs
class Java_Fundamentals{
    public static void main(String args[]){
        int hi = 44;
    }
}
*/




// Methods - Chapter 5a Test Automation University
/* OUR FIRST METHOD
Write a method that asks a suer for their name, then greets them by name
 */
/*
import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String args[]){
        System.out.println("Enter your name: ");
        Scanner scanner = new Scanner(System.in);
        String name = scanner.next();

        greetUser(name); // Calling on our function
    }
// All methods have to be contained within the scope of the class - That is why we are creating our new method outside the public staic void main(String args[]) method
    // Created our function here - it can be done at the top or here. The order does not matter
    public static void greetUser(String name){
        System.out.print("Hi there" + name);
    }
}
*/


/*
// Variable Scope Chapter 5b - Variable Scope
import java.util.Scanner;


 // VARIABLE SCOPE
 // Write an ‘instant credit check’ program that approves
 // anyone who makes more than $25,000 and has a credit score
 // of 700 or better. Reject all others.

public class Java_Fundamentals {

    static int requiredSalary = 25000;
    static int requiredCreditScore = 700;
    static Scanner scanner = new Scanner(System.in);

    public static void main(String args[]){

        double salary = getSalary();
        int creditScore = getCreditScore();
        scanner.close();

        //Check if the user is qualified
        boolean qualified = isUserQualified(creditScore, salary);

        //Notify the user
        notifyUser(qualified);

    }

    public static double getSalary(){
        System.out.println("Enter your salary:");

        double salary = scanner.nextDouble();
        return salary;
    }

    public static int getCreditScore(){
        System.out.println("Enter your credit score:");
        int creditScore = scanner.nextInt();
        return creditScore;
    }

    public static boolean isUserQualified(int creditScore, double salary){
        if(creditScore >= requiredCreditScore && salary >= requiredSalary){
            return true;
        }
        else{
            return false;
        }
    }

    public static void notifyUser(boolean isQualified){
        if(isQualified){
            System.out.println("Congrats! You've been approved.");
        }
        else{
            System.out.println("Sorry. You've been declined");
        }


    }
}
*/


// Phone Bill Calculator

/*
import java.util.Scanner;

public class Java_Fundamentals{

    static Scanner scanner = new Scanner(System.in);
    static double baseCost;
    static int minutes;

    public static void main (String args[]){

        System.out.print("Enter the base cost ");
        baseCost = scanner.nextDouble();
        scanner.nextLine();

        System.out.print("Enter the number of minutes gone over ");
        minutes = scanner.nextInt();
        scanner.nextLine();

        double extraMinutes = overageMinutes();
        double taxes = phoneTax();
        double fullTotal = total();

        scanner.close();

        System.out.println("You went over by " + extraMinutes);
        System.out.println("Your tax is " + taxes);
        System.out.println("Your total is " + fullTotal);
    }

    // Create a function for the minutes gone over
    public static double overageMinutes(){
        double overageFee = (minutes * 0.25);
        return overageFee;
    }

    // Create a function for the tax
    public static double phoneTax(){
        double tax = (baseCost + (minutes * 0.25)) * 0.15;
        return tax;

    }

    // Final Total
    public static double total(){
        double total = ((minutes * 0.25) + baseCost) + ((baseCost + (minutes * 0.25)) * 0.15);
        return total;
    }

}
*/





/*
// Write a Java program to display the following pattern.
x: *****
y: *********
z: **************
 */



/*
        * * * * * * ==================================
         * * * * *  ==================================
        * * * * * * ==================================
         * * * * *  ==================================
        * * * * * * ==================================
         * * * * *  ==================================
        * * * * * * ==================================
         * * * * *  ==================================
        * * * * * * ==================================
        ==============================================
        ==============================================
        ==============================================
        ==============================================
        ==============================================
        ==============================================

 */


/*// Print the American Flag
public class Java_Fundamentals{
    public static void main(String args[]){

        // Write a for loop to print stars
        for(int a = 0; a<9; a++){
            System.out.println(); // Iteration over each row
            if (a % 2 == 0) { // If the row is an even number, remember the row starts from 0
                for (int b = 0; b < 6; b++) { // Printing out the 6 stars in each even row
                    System.out.print("* ");
                }
            }

            else{ // Else if the row is odd
                for(int e = 0; e<5; e++){ // Printing out the 5 stars in
                    System.out.print(" *");
                }
                System.out.print("  "); // Give a space for the stars and equal signs

                    }

            for(int c = 14; c<50; c++){ // Printing the stripes after all of the stars
                System.out.print("=");
            }
        }

        // Print out the stripes only
        for(int i=0; i<6; i++){ // Iterate over each line
            System.out.println();
            for(int j=0; j<48; j++){// Print out the stars on each line
                System.out.print("=");
            }
        }
    }
}*/


/*
// Swapping two variables
 */

/*
public class Java_Fundamentals {
    public static void main(String[] args) {
        // Define two variables and a third as a placeholder
        int a = 10;
        int b = 20;
        int c = 0;

        // Output
        // a = 20
        // b = 10

        c = b; // c = 20, b = 20, a = 10
        b = a; // c = 20, b = 10, a = 10
        a = c; // c = 20, b = 10, a = 20

        System.out.println("This is a" + a);
        System.out.println("This is b" + b);

        }
    }
*/



/*// Print out this face
public class Java_Fundamentals {
    public static void main(String args[]){
        System.out.println(" +\"\"\"\"\"+");
        System.out.println("[| o o |]");
        System.out.println(" |  ^  |");
        System.out.println(" | '-' |");
        System.out.println(" +-----+");
    }
}*/



/*
// Write a Java program to add two binary numbers.

public class Java_Fundamentals {

    public static void main(String args[]){


        // Give the binary numbers
        int firstNumber = 0b10;
        int secondNumber = 0b11;

        // Add the binary numbers to get a whole number sum
        int sum = firstNumber + secondNumber;

        System.out.println(sum);

        while (sum != 0){ // While the sum of the binary numbers does not equal 0
            if (sum % 2 == 0){ // Divide the sum by two and check if it equals 0
                System.out.print(0);

            }
            else */
/*if (sum % 2 == 1)*//*
{// Divide the sum by two and check if it equals 1
                System.out.print(1);

            }

            sum = sum / 2; // Then divide the sum by two and repeat the process

        }
            System.out.print(arrayList); // Need to reverse the arrayList

    }

}
*/




// Write a Java program to convert a decimal number to a hexadecimal number

/*
public class Java_Fundamentals {
    public static void main(String args[]){

        // Define a decimal number
        double number = 15.0;
    }
}*/



///*
//// Write a Java program to compute the area of a polygon.
//import java.util.Scanner;
//
//public class Java_Fundamentals{
//    public static void main(String args[]){
//
//        // Ask user to give the number of sides on the polygon
//        System.out.print("Enter the number of sides on the polygon: ");
//        Scanner scanner = new Scanner(System.in);
//        int n = scanner.nextInt();
//        scanner.nextLine();
//
//
//        // Ask user to give the length of one side
//        System.out.print("Enter the length of one side: ");
//        int s = scanner.nextInt();
//        scanner.nextLine();
//
//        // Area of a polygon
//        double area = (n*Math.pow(s,2))/(4*(Math.tan(3.14/n)));
//        System.out.print(area);
//    }
//}
//*/






// 23,35,36,37,38,43,49,51


/*// Write a Java program to compute the distance between two points on the earth's surface
import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String args[]){

        // Give input of x1
        System.out.print("Enter the latitude of x1: ");
        Scanner scanner = new Scanner(System.in);
        double x1 = scanner.nextDouble();
        scanner.nextLine();

        // Give input of y1
        System.out.print("Enter the longitude of y1: ");
        double y1 = scanner.nextDouble();
        scanner.nextLine();

        // Give input of x2
        System.out.print("Enter the latitude of x2: ");
        double x2 = scanner.nextDouble();
        scanner.nextLine();

        // Give input of y2
        System.out.print("Enter the longitude of y2: ");
        double y2 = scanner.nextDouble();
        scanner.nextLine();

        double radius = 6371.01;

        double distance = radius * Math.acos((Math.sin(x1) * Math.sin(x2)) +
                (Math.cos(x1) * Math.cos(x2) * Math.cos(y1 - y2)));

        System.out.print(distance);
    }
}*/


/*// Write a Java program to reverse a string.
public class Java_Fundamentals {
    public static void main(String args[]){
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("The Quick Brown Fox Jumped Over The Lazy Dogs");
        System.out.println(stringBuilder);
        System.out.println(stringBuilder.reverse());
    }
}*/



/*
// Write a Java program to count letters, spaces, numbers and other characters in an input string.
public class Java_Fundamentals {
    public static void main(String args[]) {

        String sentence = "Aa kiu, I swd skieo 236587. GH kiu: sieo?? 25.33";
        char[] ch = sentence.toCharArray();
        int digits = 0;
        int alphabets = 0;
        int spaces = 0;
        int symbols = 0;


        // Count the number of whitespace
        for (int i = 0; i < ch.length; i++){
            System.out.print(ch[i]);
            if(Character.isDigit(ch[i])){
                digits = digits + 1;
            }

        // Count the number of alphabets
            else if(Character.isLetter(ch[i])){
                alphabets = alphabets + 1;
            }

        // Count the number of whitespaces
            else if(Character.isSpaceChar(ch[i])){
                spaces = spaces + 1;
            }

        // Count the number of symbols
            else{
                symbols = symbols + 1;
            }

        }
        System.out.println("The number of digits is: " + digits);
        System.out.println("The number of alphabets is: " + alphabets);
        System.out.println("The number of spaces is: " + spaces);
        System.out.println(" The number of sumbols is: " + symbols);

    }
    }
*/


/*// Problem 51: Convert a string to an integer
public class Java_Fundamentals {
    public static void main(String args[]){

        // Give a number in the form of a string
        String number = "25";

        // Converting string to an integer
        //int numericValue = Integer.valueOf(number); // Another way of converting string to an integer
        int numericValue = Integer.parseInt(number);

        System.out.print("The integer value is: " + numericValue);

    }
}*/


/*// Problem 43: Write a Java program to print the following string in a specific format (see output)
public class Java_Fundamentals {
    public static void main(String args[]){
        System.out.println("Twinkle, twinkle, little star,");
        System.out.println("\t\tHow I wonder what you are");
        System.out.println("\t\t\t\tUp above the world so high");
        System.out.println("\t\t\t\tLike a Diamond in the sky");
        System.out.println("Twinkle, twinkle, little star,");
        System.out.println("\t\tHow I wonder what you are");

    }
}*/

/*//Problem 49: Write a Java program to accept a number and check whether the number is even or not. Prints 1 if the number is even or 0 if odd.

public class Java_Fundamentals {
    public static void main(String args[]){

        // Input a number
        System.out.print("Input a number: ");
        Scanner scanner = new Scanner(System.in);
        int number = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        if(number % 2 ==0){ // If number is even
            System.out.print(1);
        }
        else{ // If number is odd
            System.out.print(0);
        }
    }
}*/

/*
// Problem 59: Convert string to lowercase
public class Java_Fundamentals {
    public static void main(String args[]){
        String sentence = "THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG";
        System.out.print(sentence.toLowerCase());

    }
}*/

// Problem 71: Write a Java program to create the concatenation of the two strings except removing the first character of each string.
// The length of the strings must be 1 and above.

/*
public class Java_Fundamentals{
    public static void main(String args[]){
        String language = "Python";
        String lesson = "Tutorial";

        // Specifying at 1 because it will print from the first character onwards dropping the 0th element
        language = language.substring(1);
        lesson = lesson.substring(1);

        System.out.print(language+lesson);
    }

    }
*/

/*// Chapter 7a and 7b Test Automation University
import java.util.Arrays;
import java.util.Random;

public class Java_Fundamentals {

    private static final int LENGTH = 6;
    private static final int MAX_TICKET_NUMBER = 69;

    public static void main(String[] args){

        int[] ticket = generateNumbers();
        Arrays.sort(ticket);
        printTicket(ticket);
    }

    public static int[] generateNumbers(){

        int[] ticket = new int[LENGTH];

        Random random = new Random();

        for(int i=0; i< LENGTH; i++){
            int randomNumber;

            *//*
            Generate random number then search to make sure it doesn't
            already exist in the array. If it does, regenerate and search again.
             *//*
            do{
                randomNumber = random.nextInt(MAX_TICKET_NUMBER) + 1;
            }while(search(ticket, randomNumber));

            //Number is unique if we get here. Add it to the array.
            ticket[i] = randomNumber;
        }

        return ticket;
    }

    /**
     * Does a sequential search on the array to find a value
     * @param array Array to search through
     * @param numberToSearchFor Value to search for
     * @return true if found, false if not
     /*
    public static boolean search(int[] array, int numberToSearchFor){

        *//*This is called an enhanced loop.
          It iterates through 'array' and
          each time assigns the current element to 'value'
         *//*
        for(int value : array){
            if(value == numberToSearchFor){
                return true;
            }
        }

        *//*If we've reached this point, then the entire array was searched
          and the value was not found
         *//*
        return false;
    }

    public static boolean binarySearch(int[] array, int numberToSearchFor){

        //Array must be sorted first
        Arrays.sort(array);

        int index = Arrays.binarySearch(array, numberToSearchFor);
        if(index >= 0){
            return true;
        }
        else return false;

    }

    public static void printTicket(int ticket[]){
        for(int i=0; i<LENGTH; i++){
            System.out.print(ticket[i] + " | ");
        }
    }
}*/



/*// Chapter 7c - Test Automation University
import java.util.Scanner;
*//*
 * Create a program that allows a user to enter any
 * number of grades and provides them with their
 * average score, as well as the highest and lowest scores.
 *//*
public class Java_Fundamentals {

    private static int grades[];
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args){

        System.out.println("How many grades would you like to enter?");
        grades = new int[scanner.nextInt()];

        getGrades();

        System.out.println("Average: " + String.format("%.2f", calculateAverage()));
        System.out.println("Highest: " + getHighest());
        System.out.println("Lowest: " + getLowest());

    }

    public static void getGrades(){
        for(int i=0; i<grades.length; i++){
            System.out.println("Enter grade #" + (i+1));
            grades[i] = scanner.nextInt();
        }
    }

    public static int calculateSum(){
        int sum = 0;
        for(int grade : grades){
            sum = sum + grade;
        }
        return sum;
    }

    public static double calculateAverage(){
        return calculateSum()/grades.length;
    }

    public static int getHighest(){
        int highest = grades[0];
        for(int grade: grades){
            if(grade > highest){
                highest = grade;
            }
        }
        return highest;
    }

    public static int getLowest(){
        int lowest = grades[0];
        for(int grade: grades){
            if(grade < lowest){
                lowest = grade;
            }
        }
        return lowest;
    }

}*/


/*// Day of the Week Mad Libs TAU
import java.util.Scanner;

public class Java_Fundamentals {
    public static void main(String args[]){
        //Make an array that holds the textual values of the days of the week
        //Have the user input a number corresponding to the day of the week. Assume the week starts on Monday
        //Your program should output the String that represents the day of the week
        //Example: User inputs the number 1, your program should print "Monday"

        // Declare a string array with all seven days
        String[] week = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
        //Elements index{    0,         1,          2,          3,         4,         5,         6    }

        // Ask user to enter numbers corresponding with days of the week
        System.out.print("Enter a number");
        Scanner scanner = new Scanner(System.in);
        int day = scanner.nextInt();
        if (day > 7){
            System.out.print("Try Again");
        }

        System.out.print("The corresponding day of the week is: " + week[day - 1]);
        // Putting day-1 matches the input with the index element
        // The index starts at 0 so Monday is 0
        // By inputting 1 as the day, we get 1-1 which is zero and we can print out Monday

    }
}*/



/*// Validate the complexity of a proposed password - Mad Libs TAU

// Validate the complexity of a proposed password by assuring it meets these rules

// At least 8 characters long - Done
// Contain an uppercase letter - Done
// Contain a special character - Done
// Not contain the user name - Done
// Not the same as the old password - Done

public class Java_Fundamentals {
    public static void main(String args[]) {
        String username = "myqakshay+PROD@gmail.com";
        String password = "Test123!*";
        String oldPassword = "MYQTest2019$";
        char[] chars = password.toCharArray();

        for (int i = 0; i < chars.length; i++) {
            if (Character.isUpperCase(chars[i])) {
                System.out.println("You have an uppercase letter");

            } else if (!Character.isLetterOrDigit(chars[i])) {
                System.out.println("You have a special character");

            }


        }
        if (password.contains(username) && password.contains(oldPassword) && password.length() < 8) {
            System.out.print("Invalid password");
        }
        else {
            System.out.print("Nothing");
        }

    }
}*/


/*
// Problem 74: Write a Java program to test if 10 appears as the first or last element of an array of integers.
// The array length must be broader than or equal to 2.
public class Java_Fundamentals{
    public static void main(String args[]){

        // Define the array
        int numbers [] = {10, -20, 0, 30, 40, 60, 100};

        // Create a condition to check the 0th as well as the last element for the number 10
        if(numbers[0] == 10 || numbers[numbers.length - 1] == 10 ){ // If the first OR last element has the number 10
            System.out.print(true + "10 is the first or last element"); // Print true and the message if the condition is met
            }
        else{
            System.out.print("10 is not the first or last element");
        }

            }
        }
*/


/*// Problem 58: Write a Java program to capitalize the first letter of each word in a sentence.
public class Java_Fundamentals {
    public static void main(String args[]) {
        String[] sentence = {"the", "quick", "brown", "fox", "jumped", "over", "the", "lazy", "dogs"};
        // Output: The Quick Brown Fox Jumped Over the Lazy Dogs
        char capitalLetter = '\u0000'; // Define a null character for char

        for (int i = 0; i < sentence.length; i++) { // Iterate over the for loop to parse over each word
            String words = sentence[i]; // Save the contents of each element in another variable ["the"]
            //System.out.println(words);
            char[] ch = words.toCharArray(); // Convert the words to char array ['t,'h','e']
            for (int j = 0; j < ch.length; j++) { // Iterate over the characters in each word
                //System.out.println(ch[j] + " is the index of: " + j); // Printing for reference
                if (Character.isLowerCase(ch[0])) { // If the Character is a lowercase letter at index of 0
                    capitalLetter = Character.toUpperCase(ch[0]); // Convert the first letter of to a capital letter and save it to a variable
                    //break;
                }

            }

            System.out.print(words.replace(ch[0], capitalLetter)); // Replace each lowercase letter at char[0] with the uppercase letter
            // Since we are replacing the first lowercase letter to an uppercase letter of the words variable, we give the second parameter as capitalLetter
            // Since capital letter is scoped within the nested loop, it can't be used outside of the loop.
            // That is why we defined the capitalLetter variable outside of the loop so it can be used globally, we just simply initialize a null variable

        }
    }
}*/


/*// Problem 84: Write a Java program to take the last three characters from a given string.
// It will add the three characters at both the front and back of the string.
// String length must be greater than three and more.

public class Java_Fundamentals {
    public static void main(String args[]) {
        String word = "Python"; // Make this take a user input
        String sub = word.substring(3);

        System.out.print(sub + word + sub);

    }
    }*/

/*// Problem 83: Write a Java program to multiply the corresponding elements of two integer arrays
public class Java_Fundamentals {
    public static void main(String args[]){
        int [] firstArray = {1, 3, -5, 4};
        int [] secondArray = {1, 4, -5, -2};

        for (int i = 0, j = 0; i < firstArray.length && j < secondArray.length; i++, j++){
            System.out.println(firstArray[i] * secondArray[j]);
        }
    }
}*/

/*// Problem 81: Write a Java program to swap the first and last elements of an array (length must be at least 1) and create another array.
public class Java_Fundamentals {
    public static void main(String args[]) {
        int[] originalArray = {20, 30, 50, 60, 70, 40};
        int[] newArray = new int[originalArray.length]; // Initialize newArray based on the length of the originalarray

        // Copy elements from originalArray to newArray
        for (int i = 0, j = 0; i < originalArray.length && j < newArray.length; i++, j++) {
            newArray[j] = originalArray[i];
        }

        // Swap the first and last elements
        newArray[0] = newArray[newArray.length - 1]; // {40,30,50,60,70,40}
        newArray[newArray.length - 1] = originalArray[0]; // {40,30,50,60,70,20}

        // Print newArray
        for (int s = 0; s < newArray.length; s++) {
            System.out.println(newArray[s]);
        }
    }
}*/


/*// Problem 81: Swapping elements but with one array
public class Java_Fundamentals{
    public static void main(String args[]){
        int[] originalArray = {20, 30, 50, 60, 70, 40};

        int temporary = originalArray[0]; // 20

        originalArray[0] = originalArray[originalArray.length -1]; // {40, 30, 50, 60, 70, 40};



        originalArray[originalArray.length -1] = temporary; // {40, 30, 50, 60, 70, 20};

        for (int i = 0; i<originalArray.length; i++){
            System.out.println(originalArray[i]);
        }

    }
}*/




/*// Problem 95: Write a Java program to create an array (length # 0) of string values.
// The elements will contain "0", "1", "2" … through ... n-1.
public class Java_Fundamentals {
    public static void main(String args[]){
        int length = 10; //
        int numbers = 0;
        char[] characters;

        for (int i = 0; i<length; i++){
            String s = Integer.toString(numbers);
            characters = s.toCharArray();
            numbers = numbers + 1;
            System.out.println(characters);
        }
        }
    }
    */


/*// Problem 76: Write a Java program to test if the first and last element of two integer arrays are the same.
// The array length must be greater than or equal to 2.
public class Java_Fundamentals{
    public static void main(String args[]){
        int array1 [] = {50, -20, 0, 30, 40, 60, 12};
        int array2 [] = {50, 20, 10, 20, 30, 50, 12};

        if (array1.length <= 2 && array1.length <= 2){ // Checking the array length is greater than or equal to 2
            System.out.print("The length of the array is less than 2");
        }

        else if (array1[0] == array2[0] && array1[array1.length - 1] == array2[array2.length -1]){
            System.out.print(true);
        }
        else{
            System.out.print(false);
        }
    }
}*/

/*// Problem 77: Write a Java program to create an array of length 2 from two integer arrays with three elements.
// The newly created array will contain the first and last elements from the two arrays.
public class Java_Fundamentals {
    public static void main(String args[]){
        int []firstArray = {50, -20, 0};
        int []secondArray = {5, -50, 10};

        int[] thirdArray = {firstArray[0], secondArray[2]};

        for (int i = 0; i< thirdArray.length; i++){
            System.out.println(thirdArray[i]);
        }
    }
}*/


/*// 79. Write a Java program to rotate an array (length 3) of integers in the left direction.
public class Java_Fundamentals {
    public static void main(String args[]){
        int[] originalArray = {20,30,40,60,70,80}; //{30,40,60,70,80,20}

        // Create a variable to hold the first element of the array
        int placeHolder = originalArray[0]; // 20

        // Create a for loop to iterate through the arrays
        for (int i = 0; i<originalArray.length - 1; i++){ // Iterate over the array at length - 1 to prevent out of bounds error
            originalArray[i] = originalArray[i+1]; // Set the value in position i = to the position the right of it. This will create left shift
            // {20,30,40,60,70,80} -> {30,40,60,70,80,80}
            //if(i == originalArray.length - 2){ // Take the second to last element of the array
                //originalArray[originalArray.length - 2] = originalArray[originalArray.length - 1]; // {30,40,60,70,80,80}
                // Set the second to last element = to the last element. This will again create a left shift
                // This also prevents the out of bounds error

            //}
            // Set the value in position i = to the position the right of it (i+1). This will create left shift
            // {20,30,40,60,70,80} -> {30,40,60,70,80,80}
        }

        originalArray[originalArray.length - 1] = placeHolder; // Put the placeholder back in the last element position
        for (int i = 0; i<originalArray.length; i++){ // Iterate over the array
            System.out.println(originalArray[i]); //
        }
        // This is for shifting to the right
        //for (int i = originalArray.length - 1; i>1; i--){
            //originalArray[i - 1] = originalArray[i - 2];
        //}

    }
}*/

/*// Problem 94: Write a Java program to rearrange all the elements of a given array of integers
// So that all the odd numbers come before all the even numbers.
public class Java_Fundamentals {
    public static void main(String args[]) {
        int[] originalArray = {50, 9, 20, 0, 45, 30, 11, 40, 60, 10}; //{9,45,11,50,20,0,30,40,60,10}
        int[] oddsArray = new int[originalArray.length]; // Create an array to hold odd numbers
        int[] evensArray = new int[originalArray.length]; // Create an array to hold even numbers
        int[] combinedArray = new int[originalArray.length]; // Create an array to combine evens and odds

        int evens = 0; // Initialize the evens variable
        int odds = 0; // Initialize the odds variable



        for (int i = 0; i < originalArray.length; i++) { // Iterate over the OriginalArray
            if (originalArray[i] % 2 != 0) { // If the value of the element at index does not have a remainder of 0
                oddsArray[odds] = originalArray[i]; // Set the index value of the element in orignalArray[i] to the index value of the oddsArray
                odds = odds + 1;
                // Since an odd number can appear at any index we need the first value from originalArray to first position of odds array
                // We can define a variable that will start oddsArray index at 0 - which is our odds variable

            } else{
                evensArray[evens] = originalArray[i];
                evens = evens + 1;
            }

        }


        int oddElements = 0;
        int evensElement = 0;

        for (int n = 0; n<combinedArray.length; n++){
            if(oddElements < odds) {
                combinedArray[n] = oddsArray[oddElements];
                //System.out.println("This is the combined Array: " + combinedArray[oddElements]);
                oddElements = oddElements + 1;
            }
            else{
                combinedArray[n] = evensArray[evensElement];
                evensElement = evensElement + 1;
            }
            System.out.println(combinedArray[n]);

        }

        /*for (int n = 0; n < combinedArray.length;) { // Another way of doing the problem
            for (int oddElements = 0; oddElements < odds; oddElements++) {
                combinedArray[n] = oddsArray[oddElements];
                n = n + 1;
                //System.out.println(combinedArray[n]);
            }
            for (int evensElements = 0; evensElements < evens; evensElements++) {
                combinedArray[n] = evensArray[evensElements];
                n = n + 1;
                //System.out.println(combinedArray[n]);
            }

        }
        for (int n = 0; n < combinedArray.length; n++) {
            System.out.println(combinedArray[n]);*/

        /*}
    }*/


/*
// Take two arrays with numbers. Combine those arrays into a third array and print out the third array
// First array should have four elements
// Second array should have six elements
public class Java_Fundamentals {
    public static void main(String args[]) {
        int[] firstArray = {2, 4, 5, 7};
        int[] secondArray = {6, 2, 9, 7, 1, 5};
        int[] thirdArray = new int[firstArray.length + secondArray.length];

        int second = 0;

        // Iterate over the third array
        for (int i = 0; i < thirdArray.length; i++) {
            if (i < firstArray.length){ // If i is less than the length of the first array
                thirdArray[i] = firstArray[i]; // Take elements from firstArray index i and append them into the third array of index i
            }
            else{ // Else i is greater than the length of the secondArray
                thirdArray[i] = secondArray[second];
                second = second + 1;
            }
            System.out.println(thirdArray[i]);
        }
    }
}
*/



/*// Problem 113: Write a Java program to merge two given sorted arrays of integers and create another sorted array.
import java.util.Arrays;

public class Java_Fundamentals {
    public static void main(String args[]){
        int[] arrayFirst = {1,2,3,4};
        int[] arraySecond = {2,5,7,8};
        int[] sortedArray = new int[arrayFirst.length + arraySecond.length];

        int second = 0;

        for(int i = 0; i<sortedArray.length; i++){
            if (i< arrayFirst.length){
                sortedArray[i] = arrayFirst[i];
                //System.out.print(sortedArray[i]);
            }
            else{
                sortedArray[i] = arraySecond[second];
                second = second + 1;
            }

        }
        Arrays.sort(sortedArray); // Sort the arrays

        for (int sort = 0; sort < sortedArray.length; sort++){
            System.out.println(sortedArray[sort]);
        }
    }
}*/

/*// Problem 70: Write a Java program to create a string in the form of short_string + long_string + short_string from two strings.
//The strings must not have the same length.
public class Java_Fundamentals {
    public static void main(String args[]){
        String shortString = "Java";
        String longString = "Learning";

        if(shortString.length() == longString.length()){
            System.out.print("The lengths are the same");
        }
        else{
            System.out.print(longString + shortString + longString);
        }
    }
}*/


/*// Problem 116: Write a Java program that iterates integers from 1 to 100.
// For multiples of three print "Fizz" instead of the number and print "Buzz" for five.
// When the number is divided by three and five, print "fizz buzz".
public class Java_Fundamentals {
    public static void main(String args[]){
        int numbers = 100;

        for (int i = 0; i<numbers; i++){
            if (i%3 == 0 && i%5 !=0){
                // We put the second condition because otherwise numbers like 15 will print Fizz and not FizzBuzz
                System.out.println("Fizz " + i);
            }
            else if (i%5 == 0 && i%3 != 0){
                // We put the second condition because otherwise numbers like 15 will print Fizz and not FizzBuzz
                System.out.println("Buzz " + i);
            }
            else if (i%3 == 0 && i%5 == 0){ // If i is divisible by 3 and 5 only
                System.out.println("FizzBuzz " + i);
            }
            else{
                System.out.println(i);
            }
        }
    }
}*/



/*// Problem 129: Write a Java program to find a number that appears only once in a given array of integers.
// All numbers occur twice.
import java.util.Arrays;
public class Java_Fundamentals {
    public static void main(String args[]) {
        int[] sourceArray = {10, 20, 10, 20, 90, 100, 100, 100, 80, 30, 40, 40, 30, 50};

        // Sort the arrays in ascending order
        Arrays.sort(sourceArray);

        // Print out the sorted array
        for (int i = 0; i< sourceArray.length; i++){
            System.out.println(sourceArray[i]);
        }

        // Check the first element for duplicates separately to avoid out of bounds error
        if(sourceArray[0] == sourceArray[1]){
            System.out.println("Duplicates found: " + sourceArray[0] + " " + sourceArray[1]);
        }

        // Iterate over the rest of the elements starting at index of 1 ( we checked the index of 0 separately
        for (int i = 1; i< sourceArray.length; i++) {
            if (i == sourceArray.length - 1) { // If i is equal to the last element which is source.length - 1
                System.out.println("This is the end");
                break;
            }
            else if (sourceArray[i] == sourceArray[i + 1]) { // If the value at index i is equal to the value at i+1
                System.out.println("Duplicates found: " + " " + sourceArray[i] + " " + sourceArray[i + 1]);
            }
            else if (sourceArray[i] != sourceArray[i+1] && sourceArray[i] != sourceArray[i-1]){ // If the value at index i does not equal the value at index i+1 and i-1
                System.out.println("No duplicates found: " + sourceArray[i]);

            }

        }
    }
}*/


/*// Ascending order of arrays
public class Java_Fundamentals {
    public static void main(String args []){
        int[] numbers = {20,50,10,40,30};


        // Print out the elements from the original array called numbers
        for (int nums = 0; nums < numbers.length; nums++){
            System.out.println("These are the original numbers: " + numbers[nums]);
        }

        // Initialize some variables that can be used for swapping
        int a; // numbers[i]
        int b; // numbers[i+1]
        int c;

        // Use a for loop to iterate the length of the array
        for (int i = 0; i< numbers.length; i++){ //{20,50,10,40,30} numbers.length = 5
            // Use a second for loop to swap the position of the variables
            // After the swapping is done inside of the second loop, the first loop will index by one and start the process in the second loop again
            for (int j = 0; j< numbers.length - 1; j++){ // numbers.length - 1 is the index of the last element
                if (j == numbers.length - 1){
                    break;
                }
                else if(numbers[j] > numbers[j+1]){

                    a = numbers[j]; // 50
                    b = numbers[j+1]; // 10

                    // Do a swap here
                    c = b; // c = numbers[i+1], b = numbers[i+1], a = numbers[i]; c = 10, b = 10, a = 50
                    b = a; // c = numbers[i+1], b = numbers[i], a = numbers[i]; c = 10, b = 50, a = 50
                    a = c; // c = numbers[i+1], b = numbers[i], a = numbers[i+1]; c = 10, b = 50, a = 10

                    numbers[j] = a; // 10
                    numbers[j+1] = b; // 50
                }

            }
        }

        // Print the sorted array
        for (int print = 0; print<numbers.length; print++){
            System.out.println(numbers[print]);
        }
    }
}*/




/*// Problem 132: Write a Java program to find the updated length of a given sorted array where duplicate elements appear at most twice.
public class Java_Fundamentals {
    public static void main(String args[]){
        int [] originalArray = {1, 1, 2, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7}; // Output {1, 1, 2, 3, 3, 4, 5, 6, 7, 7}
        int [] secondArray = new int[originalArray.length];
        // if i = i+2

        int extraElement = 0;

        for (int i = 0; i< originalArray.length; i++){
            if (i == originalArray.length - 1) {
                break;
            }
            else if(i == originalArray.length - 2 && originalArray[i] == originalArray[i+1]){
                secondArray[extraElement] = originalArray[i+1];
                extraElement = extraElement + 1;

            }
            else if(i == originalArray.length - 2 && originalArray[i] != originalArray[i+1]){
                break;
            }
            else if (originalArray[i] == originalArray[i+2]){
                secondArray[extraElement] = originalArray[i+2];
                extraElement = extraElement + 1;
            }
            }
        for (int a = 0, b = 0; a < originalArray.length && b < secondArray.length; a++, b++){
            System.out.println(originalArray[a] - secondArray[b]);
        }

        }

    }*/

/*// Problem 132: Write a Java program to find the updated length of a given sorted array where duplicate elements appear at most twice.
public class Java_Fundamentals {
    public static void main(String args[]){
        int [] originalArray = {1, 1, 2, 3, 3, 3, 4, 5, 6, 7, 7, 7, 7}; // Output {1, 1, 2, 3, 3, 4, 5, 6, 7, 7}
        int [] secondArray = new int[originalArray.length];
        // if i != i+2

        int extraElement = 0;
        int first;

        if(originalArray.length - 2 == originalArray.length - 1){

        }


        for (int i = 0; i< originalArray.length; i++){
            if(originalArray[originalArray.length - 2] == originalArray[originalArray.length - 1]){
                break;
            }
            else if (originalArray[i] != originalArray[i+2]){
                secondArray[extraElement] = originalArray[i];
                extraElement = extraElement + 1;
            }
        }

    }
}*/

/*//Problem 94 Redo: Write a Java program to rearrange all the elements of a given array of integers
//So that all the odd numbers come before all the even numbers.
public class Java_Fundamentals {
    public static void main(String args[]) {
        int[] originalArray = {50, 9, 20, 0, 45, 30, 11, 40, 60, 10}; //{9,45,11,50,20,0,30,40,60,10}
        int[] combinedArray = new int[originalArray.length];

        int position = 0;

        // Iterate over the original array
        for (int i = 0; i < originalArray.length; i++) {
            if (originalArray[i] % 2 != 0) { // If the value at index i is odd
                combinedArray[position] = originalArray[i];
                // Place the value at index i in combinedArray at position index 0 (we initialized position at 0)
                position = position + 1;
                // Increment the position by one
            }
        }
        // Iterate over the original array
        for (int i = 0; i < originalArray.length; i++) {
            if (originalArray[i] % 2 == 0) { // If the value at index j is even
                combinedArray[position] = originalArray[i];
                // Place the value at index i in combinedArray at position index 3
                // In the previous loop the position variable indexed each time we added an odd number to the combined array
                // So now, position starts at 3
                position = position + 1;
            }
        }
        // Print the array
        for (int i = 0; i < combinedArray.length; i++){
            System.out.println(combinedArray[i]);
        }
    }
}*/

/*// Descending order of arrays
public class Java_Fundamentals {
    public static void main(String args []){
        int[] numbers = {0,0,80,30,100};

        // Initialize some variables that can be used for swapping
        int a; // numbers[j]
        int b; // numbers[j+1]
        int c;

        // Use a for loop to iterate the length of the array
        for (int i = 0; i< numbers.length; i++){ //{20,50,10,40,30} numbers.length = 5
            // Use a second for loop to swap the position of the variables
            // After the swapping is done inside of the second loop, the first loop will index by one and start the process in the second loop again
            for (int j = 0; j< numbers.length - 1; j++){ // numbers.length - 1 is the index of the last element
                if (j == numbers.length - 1){
                    break;
                }
                else if(numbers[j] < numbers[j+1]){
                    a = numbers[j]; // 20
                    b = numbers[j+1]; // 50


                    c = b; // c = numbers[j+1], b = numbers[j+1], a = numbers[j]; c = 50, b = 50, a = 20
                    b = a; // c = numbers[j+1], b = numbers[j], a = numbers[j]; c = 50, b = 20, a = 20
                    a = c; // c = numbers[j+1] b = numbers[j], a = numbers[j+1]; c = 50, b = 20, a = 50

                    numbers[j] = a; // 50
                    numbers[j+1] = b; // 20
                }
            }
        }

        // Print the sorted array
        for (int i = 0; i< numbers.length; i++){
            System.out.println(numbers[i]);
        }
    }
}*/


/*// Create an integer list converting string inputs to integers
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]) {

        // Ask user to enter a number (which is in string form)
        System.out.print("Enter some numbers: ");
        Scanner scanner = new Scanner(System.in);
        String input = scanner.next();

        // Convert the string to an integer
        int integerConverted =  Integer.parseInt(input);
        System.out.print(integerConverted);

    }
}*/


/*// Problem 112: Write a Java program to compute the number of trailing zeros in a factorial.
//7! = 5040, therefore the output should be 1
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Ask user to enter a number
        System.out.println("Enter a number: ");
        Scanner scanner = new Scanner(System.in);
        int number = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        // Initialize a number
        int factorial = 1;

        // Get the factorial of the integer
        for (int i = number; i>=1; i--){
            factorial = factorial * i; // Multiply the value at index i with factorial
        }

        System.out.println(factorial);

        // Convert the factorial to a String
        String strFactorial = String.valueOf(factorial);

        // Convert the string to a char array
        char[] ch = strFactorial.toCharArray();

        // Define a variable to count the number of trialing zeros (initialize it at zero
        int trailingZeros = 0;

        // Iterate over the char array starting from the end
        for (int i = ch.length - 1; i>=0; i--){
            if(ch[i] == '0'){ // If there is a zero
                trailingZeros = trailingZeros + 1; // Update the count
            }
            else if(ch[i] != '0'){
                break;
            }
            //System.out.println("This is the char array value: " + ch[i]);
        }
        // Print the trailing zeros
        System.out.println("This is the number of trailing zeros: " + trailingZeros);

    // Another way of doing the factorial
        // number = 7
// while number >= 1{
//     number * (number -1)
//     number--

    }
}*/

/*// Problem 114: Write a Java program that rotates a string by an offset (rotate from left to right).
public class Java_Fundamentals {
    public static void main(String args[]){
        String[] dreamCarsArray = {"Lamborghini", "Rolls-Royce", "Aston Martin", "Buggati", "Porsche", "Ferrari", "Maserati", "Bently"};
        // Output {"Porche","Lamborgini", "Rolls Royce", "Aston Martin", "Buggati"}

        // Keep the last element in a variable
        String placeHolder = dreamCarsArray[dreamCarsArray.length - 1];

        // Iterate over the array
        for (int i = dreamCarsArray.length - 1; i>0; i--){
            dreamCarsArray[i] = dreamCarsArray[i-1]; // Swap the elements
        }

        // Put the value stored in placeHolder to dreamCarsArray[0]
        dreamCarsArray[0] = placeHolder;

        // Print out the rotated array
        for (int i = 0; i< dreamCarsArray.length; i++){
            System.out.println(dreamCarsArray[i]);
        }
    }
}*/


/*// Problem 152: Write a Java program that accepts four integers from the user and prints equal if all four are equal,
// and not equal otherwise.
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the first number: ");
        int first = scanner.nextInt();
        scanner.nextLine();

        System.out.print("Enter the second number: ");
        int second = scanner.nextInt();;
        scanner.nextLine();

        System.out.print("Enter the third number: ");
        int third = scanner.nextInt();
        scanner.nextLine();

        System.out.print("Enter the fourth number: ");
        int fourth = scanner.nextInt();
        scanner.nextLine();

        if(fourth == third && fourth == second && fourth == first){
            System.out.print("Equal");
        }
        else{
            System.out.print("Not Equal");
        }
    }
}*/


/*// Problem 154: Write a Java program to print the contents of a two-dimensional Boolean array
// where t represents true and f represents false.
public class Java_Fundamentals {
    public static void main(String args[]){
        boolean [][] array = {{true, false, true},
                              {false, true, false}};

        // Print array row by row
        for (int row = 0; row < array.length; row++){
            for (int column = 0; column < array[row].length; column++){
                if(array[row][column] == true){ // Check if the value is true, then print t
                    System.out.print("t" + " ");
                }
                else{
                    System.out.print("f" + " " );
                }
            }
            System.out.println();
        }
    }
}*/


/*// Problem 118: Write a Java program to get the first occurrence (Position starts from 0.) of a string within a given string.
public class Java_Fundamentals {
    public static void main(String args[]){
        String word = "Harlequin Shrimp";

        String occurence = word.substring(0,2);
        System.out.print(occurence);
        }
    }*/

/*// Problem 155: Write a Java program to print an array after changing the rows and columns of a two-dimensional array.
// Input {{10,20,30},
//        {40,50,60}}

// Output {{10,40},
//         {20,50},
//         {30,60}}
public class Java_Fundamentals{
    public static void main(String[] args) {
        int[][] oldArray = {{10,20,30},{40,50,60}};
        // {{10,20,30}
        //  {40,50,60}}

        // Print out the array row by row
        for (int row = 0; row < oldArray.length; row++){ // Iteration over the rows
            for (int column = 0; column < oldArray[row].length; column++){ // Iteration over the columns
                System.out.print(oldArray[row][column] + " ");

            }
            System.out.println();
        }
        System.out.println("================================");

        // Print out the array column by column
        for (int column = 0; column < oldArray[0].length; column++){ // Iteration over the columns
            for (int row = 0; row < oldArray.length; row++){ // Iteration over the rows
                System.out.print(oldArray[row][column] + " ");
            }
            System.out.println();
        }
    }
}*/

/*// Problem 155: Try to move the elements from the 2-D array into another 2-D array
public class Java_Fundamentals {
    public static void main(String args[]) {
        int oldArray[][] = {{10, 20, 30},
                            {40, 50, 60}};

        int newArray[][] = new int[3][2];
        // Output should be {{10,40},
        //                   {20,50},
        //                   {30,60}}


        for (int column = 0; column < oldArray[0].length; column++) { // Iteration over the columns
            for (int row = 0; row < oldArray.length; row++) { // Iteration over the rows
                newArray[column][row] = oldArray[row][column];
                //oldArray[1][0] = newArray[0][1]
                System.out.print(newArray[column][row] + " ");

            }
            System.out.println();
        }
    }
}*/

/*
// Try this but with a string array - Problem 154
public class Java_Fundamentals {
    public static void main(String args[]){
        boolean [][] array = {{true, false, true},
                {false, true, false}};

        // Print array row by row
        for (int row = 0; row < array.length; row++){
            for (int column = 0; column < array[row].length; column++){
                if(array[row][column] == true){ // Check if the value is true, then print t
                    System.out.print("t" + " ");
                }
                else{
                    System.out.print("f" + " " );
                }
            }
            System.out.println();
        }
    }
}*/

/*// Problem 161: Write a Java program to find the kth smallest and largest element in a given array.
// Elements in the array can be in any order.
public class Java_Fundamentals{
    public static void main(String args[]){
        int [] numbers = {1, 4, 17, 7, 25, 3, 100};
        int a = 0;
        int b = 0;
        int c = 0;

        for (int i = 0; i< numbers.length; i++){
            for (int j = 0; j < numbers.length - 1; j++){
                if (numbers[j] > numbers[j+1]){
                    a = numbers[j]; // 17
                    b = numbers[j+1]; // 1

                    c = a; // a = 17, b = 1, c = 17
                    a = b; // a = 1, b = 1, c = 17
                    b = c; // a = 1, b = 17, c = 17

                    numbers[j] = a; // 1
                    numbers[j+1] = b; // 17
                }
            }
        }
        System.out.println("The smallest element is: " + numbers[0]);
        System.out.println("The largest element is: " + numbers[numbers.length - 1]);
    }
}*/



/*// Problem 165: Write a Java program to move every positive number to the right and
// every negative number to the left of a given array of integers.
import java.util.Arrays;
public class Java_Fundamentals {
    public static void main(String args[]){
        int [] originalArray = {-2, 3, 4, -1, -3, 1, 2, -4, 0};

       Arrays.sort(originalArray);

       for (int i = 0; i < originalArray.length; i++){
           System.out.print(originalArray[i] + " ");
       }

    }
}*/

/*// Problem 158: Write a Java program to create a two-dimensional array (m x m) A[][] such that A[i][j] is false
// if I and j are prime otherwise A[i][j] becomes true.
// print false if prime, print true if composite
public class Java_Fundamentals {
    public static void main(String args[]){
        int numbers[][] = {{2,34,86},
                           {87,13,82},
                           {18,58,77}};

        for (int rows = 0; rows < numbers.length; rows++){ // Iterate over the rows
            for (int columns = 0; columns < numbers[rows].length; columns++){ // Iterate over the columns
                if(numbers[rows][columns] == 1 || numbers[rows][columns] == 0){
                    System.out.print("Neither");
                }
                else if(numbers[rows][columns] == 3 || numbers[rows][columns] == 5){ // In the case of 3 or 5 which are both prime
                    System.out.print(false);
                }
                else if(numbers[rows][columns] == 2){ // In the case of two which is prime
                    System.out.print(false + " ");
                }
                else if(numbers[rows][columns] % 2 == 0){ // Even numbers that are composite
                    System.out.print(true + " ");
                }
                else if(numbers[rows][columns] % 3 == 0 || numbers[rows][columns] % 5 == 0 || numbers[rows][columns] % 7 == 0 ||
                numbers[rows][columns] % 9 == 0 || numbers[rows][columns] % 11 == 0){
                    // Odd numbers that are composite
                    System.out.print(true + " ");
                }
                else{ // All numbers are prime
                    System.out.print(false + " ");
                }
                //System.out.print(numbers[rows][columns] + " ");
            }
            System.out.println();
        }
    }
}*/


/*// Problem 169: Write a Java program to reverse a sentence (assume a single space between two words) without reverse every word.
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]) {

        // Ask user to input a sentence
        System.out.print("Write a sentence: ");
        Scanner scanner = new Scanner(System.in);
        String sentence = scanner.nextLine();

        // Convert the string to a string array and save it to the variable senetenceArray
        String[] sentenceArray = sentence.split(" ");

        // Print the array backwards
        for (int i = sentenceArray.length - 1; i >= 0; i--) {
            System.out.print(sentenceArray[i] + " ");
        }

        // Call on the method
        //reversedSentence(sentence);
    }

    // This method will reverse all the characters in the strong
    public static void reversedSentence(String sentence) {
        StringBuilder words = new StringBuilder();
        words.append(sentence);
        words.toString();
        StringBuilder reversedWord = words.reverse();
        System.out.print(reversedWord);
    }

}*/


/*// Problem 133: Write a Java program to find a path from top left to bottom in the right direction
//which minimizes the sum of all numbers along its path.
public class Java_Fundamentals {
    public static void main(String args[]){
        // Create an array
        int array[][] = {{7,4,2},
                         {0,5,6},
                         {3,1,2}};

        int rowSum = 0;
        int columnSum = 0;

        // Iterate over the first column up until the last value
        for (int column = 0; column < 1; column++){
            for (int row = 0; row < array.length - 1; row++){
                columnSum = columnSum + array[row][column];
            }
        }

        // Iterate over the values in the last row
        for (int row = array.length - 1; row < array.length; row++){
            for (int column = 0; column < array[row].length; column++){
                rowSum = rowSum + array[row][column];
            }
        }
        System.out.print(rowSum + columnSum);
    }
}*/


/*// Problem 154 with strings: Write a Java program to print the contents of a two-dimensional string array
// where t represents true and f represents false
public class Java_Fundamentals {
    public static void main(String args[]) {
        String[][] strArray = {{"true", "false", "true"},
                {"false", "true", "false"}};

        for (int rows = 0; rows < strArray.length; rows++) {
            for (int columns = 0; columns < strArray[rows].length; columns++) {
                if (strArray[rows][columns].equals("true")) {
                // Use the .equals() method to compare your input (which we put as "true") to the value at strArray[rows][columns]
                    System.out.print("t" + " ");
                }
                else {
                    System.out.print("f" + " ");
                }
            }
            System.out.println();
        }
    }
}*/


/*// Problem 173: Write a Java program to find the median of the numbers inside the window (size k) at each step in a given
// Come back to this problem
// array of integers with duplicate numbers. Move the window to the array start.
public class Java_Fundamentals {
    public static void main(String args[]){
       int[] numbers = {0, 1, 2, 3, 4, 5, 6, 7, 8};

       for (int i = 0; i < numbers[i+3];){ // Start from the 0th position and iterate until the second position
           //System.out.println(numbers[i+1]); // Print the value at numbers[i+1] which is the middle value
           if(numbers[i] < 6){
               System.out.println(numbers[i+1]);
               i = i + 1;
           }
           else if (i == numbers.length - 1){
               System.out.println(numbers[i]);
               System.out.println(numbers.length - 2);

           }
       }
    }
}
// {|1, 2, 3|, 4, 5, 6, 7, 8, 8} -> Return median 2
// {1, |2, 3, 4|, 5, 6, 7, 8, 8} -> Return median 3
// {1, 2, |3, 4, 5|, 6, 7, 8, 8} -> Return median 4
// {1, 2, 3, |4, 5, 6|, 7, 8, 8} -> Return median 5
// {1, 2, 3, 4, |5, 6, 7|, 8, 8} -> Return median 6
// {1, 2, 3, 4, 5, |6, 7, 8|, 8} -> Return median 7
// {1, 2, 3, 4, 5, 6, |7, 8, 8|} -> Return median 8*/

/*// Problem 55: Write a Java program to convert seconds to hours, minutes and seconds.
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Ask user to input the number of seconds
        System.out.print("Input the number of seconds: ");
        Scanner scanner = new Scanner(System.in);
        int secondsInput = scanner.nextInt();

        // Get the whole number of hours
        int hours = secondsInput / 3600; // Divide the secondsInput by 3600 to get the whole number of hours
        int remainingSeconds = secondsInput % 3600; // Get the remaining seconds after converting to hours

        // Get the minutes
        int minutes = remainingSeconds / 60; // Take the leftover seconds and divide by 60 to get the number of minutes

        // Get the remaining seconds
        int seconds = remainingSeconds % 60; // Take the leftover seconds and do the modules to get the remaining seconds

        // Print the hours:minutes:seconds
        System.out.print(hours + ":" + minutes + ":" + seconds);
    }
}*/


/*// Problem 196: Write a Java program to create a spiral array of n * n sizes from a given integer n
public class Java_Fundamentals {
    public static void main(String args[]){


       int spiralArray [][] = {{1, 2, 3, 4, 5},
                               {16, 17, 18, 19, 6},
                               {15, 24, 25, 20, 7},
                               {14, 23, 22, 21, 8},
                               {13, 12, 11, 10, 9}};

       // Iterate over the first row and print
        for(int firstRow = 0; firstRow < 1; firstRow++){
            for(int column = 0; column < spiralArray[firstRow].length; column++){
               System.out.print(spiralArray[firstRow][column] + " ");
            }
        }

       // Iterate over the last column and print
        System.out.println();
        for (int lastColumn = spiralArray.length - 1; lastColumn > spiralArray.length - 2; lastColumn--){
            for(int row = 1; row < spiralArray[lastColumn].length; row++){
                System.out.println("          " + spiralArray[row][lastColumn]);
            }
        }

        // Iterate over the last row and print
        for (int lastRow = spiralArray.length - 1; lastRow > spiralArray.length - 2; lastRow--){
            for (int column = 0; column < spiralArray[lastRow].length - 1; column++){
                System.out.print(spiralArray[lastRow][column] + " ");
            }
        }

        // Iterate over the first column and print
        System.out.println();
        for (int firstColumn = 0; firstColumn < 1; firstColumn++){
            for (int row = 3; row >= 1; row--){
                System.out.print("This is the row: " + row);
                System.out.println("This is the firstColumn: " + firstColumn);
                System.out.println("This is the spiralArray: " + spiralArray[row][firstColumn]);
                System.out.println();
            }
        }
    }
}*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Data Types


/*// Data Types Problem 1: Write a Java program to convert temperature from Fahrenheit to Celsius in degrees
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Enter the temperature in Fahrenheit
        System.out.print("Enter the temperature in Fahrenheit: ");
        Scanner scanner = new Scanner(System.in);
        double fahrenheit = scanner.nextDouble();

        // Convert the fahrenheit to celsius
        double celsius = (fahrenheit - 32) * (5.0/9.0); // Must convert (5/9) to (5.0/9.0) since it (5/9) will return zero because 5 and 9 are integers

        // Print out the temperature in celsius
        System.out.print("This is the temperature in Celsius: " + celsius);

    }
}*/


/*// Data Types Problem 2: Write a Java program that reads a number in inches and converts it to meters
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Ask user to input the number of inches
        System.out.print("Enter the number of inches: ");
        Scanner scanner = new Scanner(System.in);
        double inches = scanner.nextDouble();

        // Convert inches to meters
        double meters = (inches * 0.0254);

        // Print out the number of meters - by rounding
        System.out.printf("in meters %.3f %n", meters);
    }
}*/


/*// Data Types Problem 3: Write a Java program that reads an integer between 0 and 1000 and adds all the digits in the integer.
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Ask for a number
        System.out.print("Enter a number between 1 and 1000: ");
        Scanner scanner = new Scanner(System.in);
        int number = scanner.nextInt();

        if(number >= 10) { // If we have a double digit number or more

            // Convert the integer to a string
            String convertedString = Integer.toString(number);

            // Convert the string to char array
            char[] ch = convertedString.toCharArray();

            // Convert the char array to an integer array
            int[] nums = new int[ch.length]; // Define an int array
            for (int i = 0; i < ch.length; i++) { // Iterate over the ch array
                nums[i] = Character.getNumericValue(ch[i]); // Get the numeric value character digit and store in the nums array at index i
            }

            // Add all the digits in the nums array
            int sum = 0;
            for (int j = 0; j < nums.length; j++) {
                sum = sum + nums[j];
            }
            // Print out the sum
            System.out.print("The sum of the digits is: " + sum);
        }
        else{ // Else the number is a single digit
            System.out.print(number);
        }
    }

}*/


/*// Data Types Problem 4: Write a Java program to convert minutes into years and days.
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Ask user for the number of minutes
        System.out.print("Enter the number of minutes: ");
        Scanner scanner = new Scanner(System.in);
        int minutes = scanner.nextInt();

        // Get the number of years by dividing minutes with 525600
        int years = minutes / 525600;

        // Capture the remaining minutes
        int remainingMinutes = minutes % 525600;

        // Divide the remaining minutes by 1440 to get the number of days
        int days = remainingMinutes / 1440;

        System.out.print(minutes + " minutes is approximately " + years + " years and " + days + " days ");

    }
}*/


/*// Data Types Problem 9: Write a Java program that accepts two integers from the user and prints the sum,
// the difference, the product, the average, the distance (the difference between the integers),
// the maximum (the largest of the two integers), and the minimum (the smallest of the two integers).
import java.util.Scanner;
public class Java_Fundamentals {
    public static void main(String args[]){

        // Ask for the first number
        System.out.print("Enter the first number: ");
        Scanner scanner = new Scanner(System.in);
        int first = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character

        // Ask for the second number
        System.out.print("Enter the second number");
        int second = scanner.nextInt();

        System.out.println("The sum is: " + (first + second)); // Print the sum

        System.out.println("The difference is: " + (first - second)); // Print the difference

        System.out.println("The product is: " + (first * second)); // Print the product

        System.out.println("The average is: " + ((first + second) / 2)); // Print the average

        if(first > second){
            System.out.println(first + " is greater than " + second); // Print the maximum
            System.out.println(second + " is smaller than " + first); // Print the minimum
        }
        else {
            System.out.println(second + " is greater than " + first); // Print the maximum
            System.out.println(first + " is smaller than " + second); // Print the minimum
        }
    }
}*/


